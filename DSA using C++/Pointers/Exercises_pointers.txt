1. Which of the following is the proper declaration of a pointer?

int *x; 

2. Which of the following gives the memory address of integer variable a ?

&a; 

3. Which of the following gives the memory address of variable 'b' pointed by pointer 'a' i.e.
int b = 10;
int *a = &b;

a

4.What will happen in this code?
int a = 100, b = 200;
int *p = &a, *q = &b;
p = q;

p now points to b

5. What will be the output ?
Send Feedback
int a = 7;
int b = 17;
int *c = &b;
*c = 7;
cout  << a << "  “ << b << endl;

7 7

6.What will be the output ?
Send Feedback
 int a = 50;
 int *ptr = &a;
 int *q = ptr;
 (*q)++;
 cout << a  << endl;

 51

7.  int a = 50;
 int *ptr = &a;
 cout << (*ptr)++ << “ “;
 cout << a << endl;

50 51

8. What will be the output ?
Send Feedback
int *ptr = 0;
int a = 10;
*ptr = a;
cout << *ptr << endl;

Error

9. Pointers Output
Send Feedback
What will be the output ?
int a = 7; int b = 17; int *c = &b; *c = 7; cout << a << " “ << b << endl;

7 7

10. Pointers Output
Send Feedback
What will be the output ?
float f = 10.5;
float p = 2.5;
float* ptr = &f;
(*ptr)++;
*ptr = p;
cout << *ptr << “ “ << f << “ “ << p;

2.5 2.5 2.5

11. What is the output
Send Feedback
int a = 7;
int *c = &a;
c = c + 1;
cout  << a << "  " << *c << endl;

7 Garbage_value

12. int a = 7;
int *c = &a;
c = c + 3;
cout<< c << endl;

412

13.Assume memory address of variable ‘a’ is : 200 and a double variable is of size 8 bytes, what will be the output -
double a = 10.54;
double *d = &a;
d = d + 1;
cout  << d << endl;

208

14.int a[5];
int *c;
cout << sizeof(a) << “ “ << sizeof(c);

20 8

15. int a[] = {1, 2, 3, 4};
cout << *(a) << " " << *(a+1);

12

16.int a[6] = {1, 2, 3};
cout << a << “ “ << &a;

200 200

17. int a[3] = {1, 2, 3};
cout << *(a + 2);

3

18.int a[6] = {1, 2, 3};
int *b = a;
cout << b[2];

3

19. int a[] = {1, 2, 3, 4, 5};
cout << *(a) << " " << *(a + 4);

1 5

20. int a[] = {1, 2, 3, 4};
int *p = a++;
cout << *p << endl;

Error

21. What will be the output ?
 char ch = 'a';
 char* ptr = &ch;
 ch++;
 cout << *ptr << endl;

 b

22. Assume address of 0th index of array ‘b’ is 200. What is the output -
char b[] = "xyz";
char *c = &b[0];
cout << c << endl;

23. Assume address of 0th index of array ‘b’ is 200. What is the output -
char b[] = "xyz";
char *c = &b[0];
cout << c << endl;

xyz

24. Assume address of 0th index of array ‘b’ is 200. What is the output -
char b[] = "xyz";
char *c = &b[0];
c++;
cout << c << endl;

yz

25. char s[]= "hello";
char *p = s;
cout << s[0] << " " << p[0];

hh

26. Figure out the correct output of the following code.
void changeSign(int *p){
  *p = (*p)  *  -1;
}

int main(){
  int a = 10;
  changeSign(&a);
  cout << a << endl;
}

-10

27. void fun(int a[]) {
    cout << a[0] << " ";
}

int main() {
    int a[] = {1, 2, 3, 4};
    fun(a + 1);
    cout << a[0];
}

21

28.What will be the output ?
void square(int *p){
 int a = 10;
 p = &a;
 *p = (*p) * (*p);
}

int main(){
 int a = 10;
 square(&a);
 cout << a << endl;
}

10

29.int a = 10;
int *p = &a;
int **q = &p;
int b = 20;
*q = &b;
(*p)++;
cout << a << " " << b << endl;

10 21

30.int a = 100;
int *p = &a;
int **q = &p;
int b = (**q)++ + 4;
cout << a << " " << b << endl;

101 104

31.What will be the output ?
  int a = 100;
  int *p = &a;
  int **q = &p;
  int b = (**q)++;
  int *r = *q;
  (*r)++;
  cout << a << " " << b << endl;

32.int a = 100;
  int *p = &a;
  int **q = &p;
  int b = (**q)++;
  int *r = *q;
  (*r)++;
  cout << a << " " << b << endl;

  102 100

33. What will be the output ?
void increment(int **p){
  (**p)++;
}

int main(){
 int num = 10;
 int *ptr = &num;
 increment(&ptr);
 cout << num << endl;
}

11

34. #include <iostream>
using namespace std;
int main()
{
  int arr[] = {4, 5, 6, 7};
  int *p = (arr + 1);
  cout << *arr + 9;
  return 0;
}

13

35. #include <iostream>
using namespace std;
int main ()
{
  int numbers[5];
  int * p;
  p = numbers; 
  *p = 10;
  p = &numbers[2]; 
  *p = 20;
  p--; 
  *p = 30;
  p = numbers + 3;
  *p = 40;
  p = numbers;
  *(p+4) = 50;
  for (int n=0; n<5; n++) {
     cout << numbers[n] << ",";
  }
  return 0;
}

10,30,20,40,50

36. #include <iostream>
using namespace std;
int main()
{ 
  char *ptr; 
  char Str[] = "abcdefg";
  ptr = Str;
  ptr += 5;
  cout << ptr;
  return 0;
}

fg 

37. #include <iostream>
using namespace std;
int main()
{
  char arr[20];
  int i;
  for(i = 0; i < 10; i++) {
    *(arr + i) = 65 + i;
  }
  *(arr + i) = '\0';
  cout << arr;
  return 0;
}

ABCDEFGHIJ

38. #include<iostream>
using namespace std;
void swap (char *x, char *y) 
{
  char *t = x;
  x = y;
  y = t;
}

int main()
{
   char *x = "ninjasquiz";
   char *y = "codingninjas";
   char *t;
   swap(x, y);
   cout<<x << " "<<y;
   t = x;
   x = y;
   y = t; 
   cout<<" "<<x<< " "<<y;
   return 0;
}

ninjasquiz codingninjas codingninjas ninjasquiz

39. #include <iostream>
using namespace std;
int main()
{
  float arr[5] = {12.5, 10.0, 13.5, 90.5, 0.5};
  float *ptr1 = &arr[0];
  float *ptr2 = ptr1 + 3;
  cout<<*ptr2<<" ";
  cout<< ptr2 - ptr1;
  return 0;
}

90.5 3

40. #include<iostream>
using namespace std;
int main() {
  char st[] = "ABCD";
  for(int i = 0; st[i] != ‘\0’; i++) {
     cout << st[i] << *(st)+i << *(i+st) << i[st];
  }
  return 0;
}

A65AAB66BBC67CCD68DD

41. #include <iostream>
using namespace std;
void Q(int z)
{
  z += z;
  cout<<z << " ";
}

void P(int *y) 
{
  int x = *y + 2;
  Q(x);
  *y = x - 1; 
  cout<<x << " ";
}

int main()
{
  int x = 5;
  P(&x);
  cout<<x;
  return 0;
}

14 7 6

42. #include<iostream>
using namespace std;
int main()
{
  int ***r, **q, *p, i=8;
  p = &i;
  (*p)++;
  q = &p;
  (**q)++;
  r = &q;
  cout<<*p << " " <<**q << " "<<***r;
  return 0;
}

43. #include<iostream>
using namespace std;
int main()
{
  int ***r, **q, *p, i=8;
  p = &i;
  (*p)++;
  q = &p;
  (**q)++;
  r = &q;
  cout<<*p << " " <<**q << " "<<***r;
  return 0;
}

10 10 10

44. int f(int x, int *py, int **ppz) {
    int y, z;
    **ppz += 1;
    z = **ppz;
    *py += 2;
    y = *py;
    x += 3;
    return x + y + z;
}

int main() {
    int c, *b, **a;
    c = 4;
    b = &c;
    a = &b;
    cout << f(c, b, a);
    return 0;
}

19